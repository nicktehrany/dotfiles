#!/bin/bash
set -e

NR_CONNECTED=$(xrandr -q | grep ' connected' | wc -l)
NR_BSPW_MONITORS=$(bspc query -M | wc -l)
MAIN_MONITOR=$(xrandr -q | grep 'primary' | awk '{print $1;exit}')

if [[ "$NR_CONNECTED" -eq "1" ]]; then
    if [[ "$NR_BSPW_MONITORS" -eq "1" ]] && [[ "$(bspc query -m $MAIN_MONITOR -D --names | wc -l)" -ne "10" ]]; then
        bspc monitor $MAIN_MONITOR -d 1 2 3 4 5 6 7 8 9 10
    elif [[ "$NR_BSPW_MONITORS" -eq "2" ]]; then
        OLD_MONITOR=$(bspc query -M --names | grep -v $MAIN_MONITOR)
        MOVE_DESKTOPS=$(bspc query -m $OLD_MONITOR -D --names | awk '{printf "%s ", $0}')
        bspc monitor $OLD_MONITOR -a temp # need a dummy desktop to move all others
        for DESK in ${MOVE_DESKTOPS}
        do
            bspc desktop $DESK -m $MAIN_MONITOR
        done
        bspc monitor $OLD_MONITOR -r
        xrandr --output $OLD_MONITOR --off
        bspc monitor $MAIN_MONITOR --reorder-desktops 1 2 3 4 5 6 7 8 9 10
    fi
elif [[ "$NR_CONNECTED" -eq "2" ]]; then 
    # Sanity reset if ext monitor is still active for some reason, e.g., from screen mirror
    xrandr --output $EXT_MONITOR --off
    EXT_MONITOR=$(xrandr -q | grep -Fw "connected" | awk '{print $1}' | grep -v $MAIN_MONITOR)
    # TODO: figure out how we can check if layout is correct then run this
    xrandr --output $EXT_MONITOR --mode 1920x1080 --rotate normal --output $MAIN_MONITOR --mode 1920x1080 --rotate normal --right-of $EXT_MONITOR
    sleep 3
    if [[ "$(bspc query -m $MAIN_MONITOR -D | wc -l)" -eq "10" ]]; then
        for DESK in {1..5}
        do
            bspc desktop $DESK -m $EXT_MONITOR
        done
    else
        bspc monitor $EXT_MONITOR -d 1 2 3 4 5
        bspc monitor $MAIN_MONITOR -d 6 7 8 9 10
    fi
fi
while [[ "$(bspc query -D --names | grep Desktop | wc -l)" -ne "0" ]]; do  bspc desktop Desktop -r; done
